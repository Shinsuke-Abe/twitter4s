{"name":"Twitter4S","tagline":"A Scala wrapper for Twitter4J","body":"[Japanese](https://github.com/Shinsuke-Abe/twitter4s/blob/master/readme.ja.md)\r\n\r\nThis is a Scala wrapper of [Twitter4J](https://github.com/yusuke/twitter4j). <br/>\r\nIt provides easy way to use basic functions of Twitter4J in Scala.<br/>\r\n\r\n## Install\r\n\r\nAdd the following dependencies to build.sbt.\r\n\r\n```\r\nresolvers += \"bintray\" at \"http://dl.bintray.com/shinsuke-abe/maven\"\r\n\r\nlibraryDependencies += \"com.github.Shinsuke-Abe\" %% \"twitter4s\" % \"2.1.0\"\r\n```\r\n\r\n## About Build environment\r\n\r\nTwitter4S is built in following environments.\r\n\r\n* Scala 2.10.3\r\n* sbt 0.13.1\r\n* Twitter4J 3.0.5\r\n\r\nNote: Built on latest stable library at January 18,2014.\r\n\r\n## Dependencies with other libraries\r\n\r\nTwitter4S has no dependencies without Twitter4J.\r\n\r\n## How to use\r\n\r\nTwitter4S, there are available two ways of writing that use the DSL (Twitter4S unique features) and compliant Twitter4J way.<br/>\r\nDSL is not implemented all of Twiiter4J functions yet. Twitter4S implements frequency used functions only. \r\n\r\n### Compliant Twitter4J way\r\n\r\n```\r\nimport twitter4s._ // You must import for implicit type converion.\r\n\r\nval twitter = Twitter()\r\ntwitter.setOAuthConsumer(ConsumerKey(\"consumerKey\", \"consumerSecret\"))\r\ntwitter.setOAuthAccessToken(AccessToken(\"accessToken\", \"tokenSecret\"))\r\n\r\ntwitter.(API Methods...) (It have one-to-one correspondence between Twitter4S and Twitter4J.)\r\n```\r\n\r\n### DSL\r\n\r\nDSL provides StringContext and some methods.<br/>\r\n\r\n```\r\nimport twitter4s.dsl._\r\n\r\nimplicit val consumerKey = ConsumerKey(\"consumerKey\", \"consumerSecret\")\r\n\r\nwithToken(AccessToken(\"accessToken\", \"tokenSecret\") { implicit twitter =>\r\n  tweet\"test tweet\" udpate\r\n}\r\n```\r\n\r\nPlease notice that operate for user authorized by AccessToken with withToken argument.<br/>\r\n\r\n#### StringContext provided by DSL\r\n\r\nStringContext that implementation is as follows.\r\n\r\n```\r\nuser\"screen name\"\r\nuser\"id:user id\"\r\n\r\nlist\"List Slug\"\r\nlist\"id:List ID\"\r\n\r\ntweet\"Tweet\"\r\n\r\nmessage\"Content of DM\"\r\n```\r\n\r\n#### Ability to provide DSL\r\n\r\n```\r\n// method for Tweet.\r\ntweet\"test\" update // tweet 'test'\r\n\r\n// methods for User.\r\nget(user\"USER-A\") // Get infomation of USER-A\r\nfollow(user\"USER-A\") // Follow USER-A\r\nunfollow(user\"USER-A\") // Unfollow USER-A\r\nblock(user\"USER-A\") // Block USER-A\r\n\r\n// methods for List.\r\nget(list\"LIST-A\") // Get infomation of USER-A\r\nadd(user\"USER-A\") to list\"LIST-A\" // Add USER-A to LIST-A\r\nremove(user\"USER-A\") from list\"LIST-A\" // Remove USER-A from LIST-A\r\n\r\n// methods for DM.\r\nsend(message\"TEST\") to user\"USER-A\" // Send DirectMessage 'test' to USER-A.\r\n```\r\n\r\n#### About function addition for DSL\r\n\r\nNew functions will be added for new version.<br/>\r\nIf you want any other DSL, add issue or send mention to @mao_instantlife on Twitter please.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}